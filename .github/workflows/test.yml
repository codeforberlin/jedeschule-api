name: Tests

on:
  - pull_request
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.12', '3.13']
    name: Tests with Python ${{ matrix.python-version }}

    services:
      postgres:
        image: postgis/postgis:13-3.1-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: apt install --yes libgeos-dev
      - run: uv pip install wheel
      - run: uv pip install -r requirements-dev.txt
      - run: uv pip install -r requirements.txt
      - run: |
          createdb jedeschule_test
          psql jedeschule_test -c "CREATE EXTENSION postgis";
        env:
          PGHOST: localhost
          PGPASSWORD: postgres
          PGPORT: 5432
          PGUSER: postgres
      - run: coverage run -m pytest
        env:
          DATABASE_URL: postgresql://postgres:postgres@0.0.0.0:5432/jedeschule_test
          DATABASE_URL_TEST: postgresql://postgres:postgres@0.0.0.0:5432/jedeschule_test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
